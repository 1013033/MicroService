server:
  port: 8080
debug: true
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: "jdbc:sqlserver://${DATABASE_HOST:127.0.0.1}:${DATABASE_PORT:1433};databaseName=${DATABASE_NAME:microService};encrypt=true;trustServerCertificate=true;"
    username: "${DATABASE_USERNAME:testdb}"
    password: "${DATABASE_PASSWORD:aaaaaaaaaa@0}"
    driver-class-name: "com.microsoft.sqlserver.jdbc.SQLServerDriver"
  jpa:
    database-platform: "org.hibernate.dialect.SQLServer2012Dialect"
    show-sql: "${JPA_SHOW_URL:true}"
    properties:
      hibernate:
        format_sql: "${HIBERNATE_FORMAT_SQL:true}"
#  datasource:
#    url: jdbc:h2:mem:testdb
#    driverClassName: org.h2.Driver
#    username: sa
#    password: ''
#  h2:
#    console:
#      enabled: true
#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
#    hibernate:
#      ddl-auto: update
#    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: "guest"
#    password: "guest"
logging:
  level:
    com:
      neux:
        accounts: DEBUG
  pattern:
    console: "%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n"
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
    info:
      env:
        enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Accounts 應用程式"
    version: "1.0.0"
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

#resilience4j.ratelimiter:
#  configs:
#    default:
#      timeoutDuration: 1000
#      limitRefreshPeriod: 5000
#      limitForPeriod: 1